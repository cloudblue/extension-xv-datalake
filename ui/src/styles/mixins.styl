@import 'variables'


img($img)
  width: image-width($img-path)
  height: image-height($img-path)
  background: url($img-path) no-repeat center
  $img-path = "~img/${img}"

background-opacity($color, $opacity = 0.3)
  background: rgba($color, $opacity)

colorOpacity($color, $opacity = 0.3)
  color: rgba($color, $opacity)

media($w)
  @media screen and (min-width: $w)
    {block}


// Specific functions to avoid stylus falling while using css variables
// in native css rgb() and rgba() functions that he proxying

_rgb($color)
  unquote('rgb(' + $color + ')')

_rgba($color, $alpha)
  unquote('rgba(' + $color + ',' + $alpha + ')')

odd()
  &:nth-of-type(2n - 1)
    {block}

even()
  &:nth-of-type(2n - 2)
    {block}



//////////////////////
// TOUCH-ONLY hacks //
//////////////////////

// usage:
//   +only-touch-devices()
//     .my-class {
//       position: relative;
//     }
//
// result:
// @media (hover: none) {
//   .my-class {
//      position: relative;
//   }
// }

// always works on touch-screen devices, whatever input methods are available
only-touch-devices() {
  @media (hover: none) {
    {block};
  }
}

// works on touch-screen devices only when no additional hoverable devices
// connected, such as mouses
only-non-hoverable-devices() {
  @media (any-hover: none) {
    {block};
  }
}


///////////////////////
// SAFARI ONLY hacks //
///////////////////////

// usage:
//   +only-safari()
//     .my-class {
//       display: block;
//     }

only-safari() {
  // HACK: for showing on iOs Safari 7.1+
  _::-webkit-full-page-media &,
  _:future &,
  :root & {
    {block};
  }

  // HACK: for showing on iOs Safari 10.1+
  @media not all and (min-resolution: .001dpcm) {
    @supports (-webkit-appearance: none) {
      {block};
    }
  }

  // HACK: for showing on iOs Safari 6.1-10
  // @media {  // this isn't working in Less
  @media screen and (min-color-index: 0) and (-webkit-min-device-pixel-ratio: 0) {
    @media screen and (min-width: 0px) {  // so using this
      {block};
    }
  }

  // HACK: for showing on iOs Safari 11+
  @media not all and (min-resolution: .001dpcm) {
    @supports (-webkit-appearance: none) and (stroke-color: transparent) {
      {block};
    }
  }
}

// Clears c-button space (usefull for icon buttons)
clear-button-space() {
  width: auto;
  min-width: 0;
  height: auto;
  padding: 0;
}

// Generate 16 rules multiplied by size of our $module, negative ones are optional
// $module === 4px
gen-rulesets($ruleName, $ruleValue=1, $unitType=px, $ruleFunction=false, $addNegative=false) {
  for i in (0..$module * 16) {
    if i % $module == 0 {
      &_{i} {
        if $ruleFunction {
          {$ruleName}: $ruleFunction(unit($ruleValue * i, $unitType));
        }
        else {
          {$ruleName}: unit($ruleValue * i, $unitType);
        }
      }

      if $addNegative {
        &_-{i} {
          if $ruleFunction {
            {$ruleName}: $ruleFunction(unit($ruleValue * i * -1, $unitType));
          }
          else {
            {$ruleName}: unit($ruleValue * i * -1, $unitType);
          }
        }
      }
    }
  }
}
